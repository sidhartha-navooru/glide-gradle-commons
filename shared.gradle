ext {
    deps = [
        glide: [
            dog: 'com.glidetech.core:glide-dog:0.1.0',
            clientApi: 'com.glidetech.client:client-api:0.1.0',
            clientService: 'com.glidetech.client:client-service:0.1.0',
            glideTemplateService: 'com.glidetech.template:glide-template-service:0.1.0',
            glideTemplateApi: 'com.glidetech.template:glide-template-api:0.1.0',
            ISO8583Api: 'com.glidetech.ISO8583:ISO8583-api:0.1.0',
            ISO8583Service: 'com.glidetech.ISO8583:ISO8583-service:0.1.0',
            prospectApi: 'com.glidetech.prospect:api:0.1.0',
            prospectService: 'com.glidetech.prospect:service:0.1.0',
            clientAccountMappingApi: 'com.glide.client-account-mapping:api:0.1.0',
            clientAccountMappingService: 'com.glide.client-account-mapping:service:0.1.0',
            transactionApi: 'com.glidetech.transaction:transaction-api:0.1.0',
            transactionService: 'com.glidetech.transaction:transaction-service:0.1.0',
            glideCommand: 'com.glidetech.core:glide-command:0.1.2',
            glidePostgresql: 'com.glidetech.core:glide-postgresql:0.1.0',
            lang: 'org.apache.fineract.cn:lang:0.1.0',
            anubisApi: 'org.apache.fineract.cn.anubis:anubis-api:0.1.0',
            anubisLibrary: 'org.apache.fineract.cn.anubis:anubis-library:0.1.0'
        ],
        spring: [
            securityCore: 'org.springframework.security:spring-security-core:5.4.0',
            securityWeb: 'org.springframework.security:spring-security-web:5.4.0',
            springJMS: 'org.springframework:spring-jms',
            springRestDocs: 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'

        ],
        springCloud: [
            security: 'org.springframework.boot:spring-boot-starter-security',
            configClient: 'org.springframework.cloud:spring-cloud-starter-config',
            openFeign: 'org.springframework.cloud:spring-cloud-starter-openfeign',
            mavenBom: 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR7',
            eurekaClient: 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        ],
        springBoot: [
            web: 'org.springframework.boot:spring-boot-starter-web',
            test: 'org.springframework.boot:spring-boot-starter-test',
            jetty: 'org.springframework.boot:spring-boot-starter-jetty',
            actuator: 'org.springframework.boot:spring-boot-starter-actuator',
            jpa: 'org.springframework.boot:spring-boot-starter-data-jpa',
            validator: 'org.springframework.boot:spring-boot-starter-validation',
            ribbon: 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon',
            cassandra: 'org.springframework.boot:spring-boot-starter-data-cassandra',
            activemq: 'org.springframework.boot:spring-boot-starter-activemq',
            amqp: 'org.springframework.boot:spring-boot-starter-amqp',
            axon: 'org.axonframework:axon-spring-boot-starter:4.4'
        ],
        miscellaneous: [
            gson: 'com.google.code.gson:gson',
            postgres: 'org.postgresql:postgresql',
            jwt: 'io.jsonwebtoken:jjwt:0.9.1',
            expiringMap: 'net.jodah:expiringmap:0.5.9',
            flyway: 'org.flywaydb:flyway-core:6.5.4',
            nettyAll: 'io.netty:netty-all:4.1.51.Final',
            lombok: 'org.projectlombok:lombok:1.18.12',
            junit5: 'org.junit.jupiter:junit-jupiter:5.6.2',
            findBugs: 'com.google.code.findbugs:jsr305:3.0.2',
            cassandraUnit: 'org.cassandraunit:cassandra-unit:4.3.1.0',
            otjPgEmbedded: 'com.opentable.components:otj-pg-embedded:0.13.3',
            nettyTransportNativeEpoll: 'io.netty:netty-transport-native-epoll:4.1.51.Final',
            feignGson: 'io.github.openfeign:feign-gson:10.10.1',
            activeMqJmsPool: 'org.apache.activemq:activemq-jms-pool:5.16.0',
            javaxPersistence: 'javax.persistence:javax.persistence-api:2.2',
            javaxValidation: 'javax.validation:validation-api:2.0.1.Final',
            apacheCommonsLang: 'org.apache.commons:commons-lang3:3.11',
            postgresqlJdbcDriver: 'org.postgresql:postgresql:42.2.16',
            guava: 'com.google.guava:guava:29.0-jre',
            threeten: 'org.threeten:threeten-extra:1.5.0',
            axonAmqp: 'org.axonframework.extensions.amqp:axon-amqp-spring-boot-starter:4.4',
            kafka: 'org.springframework.kafka:spring-kafka'
        ]
    ]
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://mifos.jfrog.io/mifos/libs-snapshot/'
    }
    maven {
        url = 'https://glide.jfrog.io/artifactory/snapshot/'
            credentials {
            username = artifactoryUsername
                password = artifactoryPassword
        }
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_CONTEXT_URL")
        publish {
        repository {
            repoKey = 'snapshot-local'
                username = System.getenv("ARTIFACTORY_USERNAME")
                password = System.getenv("ARTIFACTORY_PASSWORD")
                maven = true
        }
        defaults {
            publications 'mavenJava'
        }
    }
}
